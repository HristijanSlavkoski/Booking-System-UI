spring:
  application:
    name: vr-escape-room-api

  datasource:
    url: jdbc:postgresql://localhost:5432/vrroom
    username: vrroom
    password: vrroom123
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  security:
    oauth2:
      resourceserver:
        jwt:
          # issuer-uri is enough; jwk-set-uri optional if issuer is reachable
          issuer-uri: http://localhost:8080/realms/vrroom
          jwk-set-uri: http://localhost:8080/realms/vrroom/protocol/openid-connect/certs

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

server:
  port: 8081
  servlet:
    context-path: /api

logging:
  level:
    com.vrroom: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG

cors:
  allowed-origins: http://localhost:4200
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

stripe:
  api-key: ${STRIPE_SECRET_KEY:sk_test_YOUR_KEY_HERE}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET:whsec_YOUR_WEBHOOK_SECRET}
  success-url: http://localhost:4200/booking/success?session_id={CHECKOUT_SESSION_ID}
  cancel-url: http://localhost:4200/booking/cancel

email:
  from: ${EMAIL_FROM:noreply@vrroom.com}
  from-name: VR Escape Room
  enabled: ${EMAIL_ENABLED:true}

keycloak:
  auth-server-url: http://localhost:8080
  realm: vrroom
  client-id: vrroom-app
  client-secret: c8zb0AcWcSOifqKWZ5CwQq0SXB9fMCNw
